

module FIR_test #(
	parameter DW = 16,
	parameter TAPS = 151,
	parameter real COEF[TAPS] = '{
  1.493687433728e-06,1.782155484761e-06,2.899900850664e-06,4.175599098952e-06,
  5.368895065202e-06,6.103446424677e-06,5.877014544627e-06,4.102702207556e-06,
  1.861949054358e-07,-6.361182251252e-06,-1.578050445652e-05,-2.790901308064e-05,
  -4.203188792183e-05,-5.677055029358e-05,-7.003938629926e-05,-7.910187680356e-05,
  -8.075089415796e-05,-7.162590559492e-05,-4.866234161462e-05,-9.64671696429e-06,
   4.61725347814e-05,0.0001174910634937,0.0002004617570361, 0.000288414610071,
  0.0003718802117478,0.0004389967723915,0.0004763483863367,0.0004702358052317,
  0.0004083236055897,0.0002815446812709,8.608172704283e-05,-0.000174805740042,
  -0.0004893725041312,-0.0008366660211578,-0.001186733842932,-0.001501939115941,
  -0.001739466143876,-0.001854972483386,-0.001807200307546, -0.00156321202318,
  -0.001103780334563,-0.0004283591646002,0.0004409938215513, 0.001457365948673,
   0.002548955229121, 0.003621649137619, 0.004564396927212, 0.005257289020421,
     0.0055819612436, 0.005433645524854, 0.004733924054676, 0.003443042950353,
    0.00157053295489,-0.000817109478443,-0.003592795335583,-0.006570127190443,
  -0.009510081164891, -0.01213311821226, -0.01413625358642, -0.01521410943511,
   -0.01508252014237, -0.01350290203491, -0.01030538067125,-0.005408621242233,
    0.00116555342463, 0.009284348859721,  0.01870409186391,  0.02907871726897,
    0.03997644395973,  0.05090372997769,  0.06133494214427,  0.07074563517379,
    0.07864696243301,  0.08461857450232,  0.08833742281138,  0.08960017290262,
    0.08833742281138,  0.08461857450232,  0.07864696243301,  0.07074563517379,
    0.06133494214427,  0.05090372997769,  0.03997644395973,  0.02907871726897,
    0.01870409186391, 0.009284348859721,  0.00116555342463,-0.005408621242233,
   -0.01030538067125, -0.01350290203491, -0.01508252014237, -0.01521410943511,
   -0.01413625358642, -0.01213311821226,-0.009510081164891,-0.006570127190443,
  -0.003592795335583,-0.000817109478443,  0.00157053295489, 0.003443042950353,
   0.004733924054676, 0.005433645524854,   0.0055819612436, 0.005257289020421,
   0.004564396927212, 0.003621649137619, 0.002548955229121, 0.001457365948673,
  0.0004409938215513,-0.0004283591646002,-0.001103780334563, -0.00156321202318,
  -0.001807200307546,-0.001854972483386,-0.001739466143876,-0.001501939115941,
  -0.001186733842932,-0.0008366660211578,-0.0004893725041312,-0.000174805740042,
  8.608172704283e-05,0.0002815446812709,0.0004083236055897,0.0004702358052317,
  0.0004763483863367,0.0004389967723915,0.0003718802117478, 0.000288414610071,
  0.0002004617570361,0.0001174910634937, 4.61725347814e-05,-9.64671696429e-06,
  -4.866234161462e-05,-7.162590559492e-05,-8.075089415796e-05,-7.910187680356e-05,
  -7.003938629926e-05,-5.677055029358e-05,-4.203188792183e-05,-2.790901308064e-05,
  -1.578050445652e-05,-6.361182251252e-06,1.861949054358e-07,4.102702207556e-06,
  5.877014544627e-06,6.103446424677e-06,5.368895065202e-06,4.175599098952e-06,
  2.899900850664e-06,1.782155484761e-06,1.493687433728e-06
	}
)(
	input wire clk,
	input wire rst_n,
	input wire en,
	input wire signed [DW - 1 : 0] in,
	output logic signed [DW - 1 : 0] out
);
	localparam N = TAPS - 1;
	logic signed [DW - 1 : 0] coef[TAPS];
	logic signed [DW - 1 : 0] prod[TAPS];
	logic signed [DW - 1 : 0] delay[TAPS];
	generate
		for (genvar t = 0; t < TAPS; t++) begin
			assign coef[t] = COEF[t] * 2.0**(DW - 1.0);
			assign prod[t] = ((2 * DW)'(in) * (2 * DW)'(coef[t])) >>> (DW - 1);
		end
	endgenerate

	generate
		for (genvar t = 0; t < TAPS; t++) begin
			always_ff @(posedge clk)begin
				if (rst_n == 0) begin
					delay[t] <= '0;
				end
				else if(en)begin
					if (t == 0) begin
						delay[0] <= prod[N - t];
					end
					else begin
						delay[t] <= prod[N - t] + delay[t - 1];
					end
				end
			end
		end
	endgenerate
	assign out = delay[N];
endmodule

module FIR_DS #(
	parameter DW = 16,
	parameter TAPS = 21,
	parameter real COEF[TAPS] = '{
     2.56841541642e-20,0.0002761936373948,-5.355598433158e-19,-0.003285733489462,
  3.020547742223e-18,  0.01804078188277,-8.837135788801e-18, -0.06844267248234,
  1.607163390752e-17,   0.3034110626405,   0.5000007356224,   0.3034110626405,
  1.607163390752e-17, -0.06844267248234,-8.837135788801e-18,  0.01804078188277,
  3.020547742223e-18,-0.003285733489462,-5.355598433158e-19,0.0002761936373948,
   2.56841541642e-20
	}
)(
	input wire clk,
	input wire rst_n,
	input wire en,
	input wire signed [DW - 1 : 0] in,
	output logic signed [DW - 1 : 0] out
);
	localparam N = TAPS - 1;
	logic signed [DW - 1 : 0] coef[TAPS];
	logic signed [DW - 1 : 0] prod[TAPS];
	logic signed [DW - 1 : 0] delay[TAPS];
	generate
		for (genvar t = 0; t < TAPS; t++) begin
			assign coef[t] = COEF[t] * 2.0**(DW - 1.0);
			assign prod[t] = ((2 * DW)'(in) * (2 * DW)'(coef[t])) >>> (DW - 1);
		end
	endgenerate

	generate
		for (genvar t = 0; t < TAPS; t++) begin
			always_ff @(posedge clk)begin
				if (rst_n == 0) begin
					delay[t] <= '0;
				end
				else if(en)begin
					if (t == 0) begin
						delay[0] <= prod[N - t];
					end
					else begin
						delay[t] <= prod[N - t] + delay[t - 1];
					end
				end
			end
		end
	endgenerate
	assign out = delay[N];
endmodule

module FIR_DS2 #(
	parameter DW = 16,
	parameter TAPS = 51,
	parameter real COEF[TAPS] = '{
	5.294457942545e-05, 0.000125342411847,0.0002648467105441,0.0004954378427025,
  	0.0008517354904706, 0.001373464492657, 0.002103896769981, 0.003087570477884,
   	0.004367347457674, 0.005980948781009, 0.007957184278383,   0.0103121565247,
    0.01304576423809,  0.01613884720716,  0.01955129982269,  0.02322143131439,
    0.02706676974348,  0.03098639920636,  0.03486479439363,  0.03857698497026,
    0.04199475694467,  0.04499349207985,  0.04745917091283,   0.0492950288613,
    0.05042736324626,  0.05081004248352,  0.05042736324626,   0.0492950288613,
    0.04745917091283,  0.04499349207985,  0.04199475694467,  0.03857698497026,
    0.03486479439363,  0.03098639920636,  0.02706676974348,  0.02322143131439,
    0.01955129982269,  0.01613884720716,  0.01304576423809,   0.0103121565247,
  	0.007957184278383, 0.005980948781009, 0.004367347457674, 0.003087570477884,
   	0.002103896769981, 0.001373464492657,0.0008517354904706,0.0004954378427025,
 	0.0002648467105441, 0.000125342411847,5.294457942545e-05}
)(
	input wire clk,
	input wire rst_n,
	input wire en,
	input wire signed [DW - 1 : 0] in,
	output logic signed [DW - 1 : 0] out
);
	localparam N = TAPS - 1;
	logic signed [DW - 1 : 0] coef[TAPS];
	logic signed [DW - 1 : 0] prod[TAPS];
	logic signed [DW - 1 : 0] delay[TAPS];
	generate
		for (genvar t = 0; t < TAPS; t++) begin
			assign coef[t] = COEF[t] * 2.0**(DW - 1.0);
			assign prod[t] = ((2 * DW)'(in) * (2 * DW)'(coef[t])) >>> (DW - 1);
		end
	endgenerate

	generate
		for (genvar t = 0; t < TAPS; t++) begin
			always_ff @(posedge clk)begin
				if (rst_n == 0) begin
					delay[t] <= '0;
				end
				else if(en)begin
					if (t == 0) begin
						delay[0] <= prod[N - t];
					end
					else begin
						delay[t] <= prod[N - t] + delay[t - 1];
					end
				end
			end
		end
	endgenerate
	assign out = delay[N];
endmodule

module FIR_DS3 #(
	parameter DW = 24,
	parameter TAPS = 41,
	parameter real COEF[TAPS] = '{
  2.126653149651e-21,6.553713634951e-06,3.733369509547e-05,0.0001176905376719,
  0.0002528167656135,0.0003791556050892,0.0003096224010766,-0.0002753910799984,
  -0.001727376218351,-0.004186613865911,-0.007243016227066,-0.009646719930427,
  -0.009275572033719,-0.003528956354178, 0.009840715237703,  0.03167769293361,
    0.06056433333791,  0.09259723792148,   0.1220547649627,   0.1428594810009,
     0.1503724951942,   0.1428594810009,   0.1220547649627,  0.09259723792148,
    0.06056433333791,  0.03167769293361, 0.009840715237703,-0.003528956354178,
  -0.009275572033719,-0.009646719930427,-0.007243016227066,-0.004186613865911,
  -0.001727376218351,-0.0002753910799984,0.0003096224010766,0.0003791556050892,
  0.0002528167656135,0.0001176905376719,3.733369509547e-05,6.553713634951e-06,
  2.126653149651e-21
	}
)(
	input wire clk,
	input wire rst_n,
	input wire en,
	input wire signed [DW - 1 : 0] in,
	output logic signed [DW - 1 : 0] out
);
	localparam N = TAPS - 1;
	logic signed [DW - 1 : 0] coef[TAPS];
	logic signed [DW - 1 : 0] prod[TAPS];
	logic signed [DW - 1 : 0] delay[TAPS];
	generate
		for (genvar t = 0; t < TAPS; t++) begin
			assign coef[t] = COEF[t] * 2.0**(DW - 1.0);
			assign prod[t] = ((2 * DW)'(in) * (2 * DW)'(coef[t])) >>> (DW - 1);
		end
	endgenerate

	generate
		for (genvar t = 0; t < TAPS; t++) begin
			always_ff @(posedge clk)begin
				if (rst_n == 0) begin
					delay[t] <= '0;
				end
				else if(en)begin
					if (t == 0) begin
						delay[0] <= prod[N - t];
					end
					else begin
						delay[t] <= prod[N - t] + delay[t - 1];
					end
				end
			end
		end
	endgenerate
	assign out = delay[N];
endmodule

module AM_FIR #(
	parameter DW = 16,
	parameter TAPS = 101,
	parameter real COEF[TAPS] = '{-9.148485235798e-07,-2.067391588271e-07,1.724714769029e-06,5.943772772803e-06,
  1.316433104934e-05,2.356635950745e-05,3.631823402269e-05,4.911165205574e-05,
  5.785726733854e-05,5.671767393354e-05,3.864677991203e-05,-3.451613287799e-06,
  -7.494248249321e-05,-0.0001772067378842,-0.0003052469056063,-0.0004456497436656,
  -0.0005755189204385,-0.0006630076615782,-0.0006699645544401,-0.0005569391624674,
  -0.0002903894117158,0.0001485657444722,0.0007550212644893, 0.001492396785276,
    0.00228763863959, 0.003031332300765, 0.003584162844422, 0.003790424742551,
    0.00349824689952, 0.002584986623442,0.0009850355479191,-0.001283717515929,
  -0.004099096552163,-0.007223830347702, -0.01030832330718, -0.01290920430473,
   -0.01452389340428,  -0.0146391385917, -0.01278917614581,-0.008617216198087,
  -0.001932690822364, 0.007243607113603,  0.01865357808656,  0.03180027891475,
    0.04597324918632,  0.06029983896941,  0.07381824903029,  0.08556494701073,
    0.09466691128628,   0.1004281311173,   0.1024001461563,   0.1004281311173,
    0.09466691128628,  0.08556494701073,  0.07381824903029,  0.06029983896941,
    0.04597324918632,  0.03180027891475,  0.01865357808656, 0.007243607113603,
  -0.001932690822364,-0.008617216198087, -0.01278917614581,  -0.0146391385917,
   -0.01452389340428, -0.01290920430473, -0.01030832330718,-0.007223830347702,
  -0.004099096552163,-0.001283717515929,0.0009850355479191, 0.002584986623442,
    0.00349824689952, 0.003790424742551, 0.003584162844422, 0.003031332300765,
    0.00228763863959, 0.001492396785276,0.0007550212644893,0.0001485657444722,
  -0.0002903894117158,-0.0005569391624674,-0.0006699645544401,-0.0006630076615782,
  -0.0005755189204385,-0.0004456497436656,-0.0003052469056063,-0.0001772067378842,
  -7.494248249321e-05,-3.451613287799e-06,3.864677991203e-05,5.671767393354e-05,
  5.785726733854e-05,4.911165205574e-05,3.631823402269e-05,2.356635950745e-05,
  1.316433104934e-05,5.943772772803e-06,1.724714769029e-06,-2.067391588271e-07,
  -9.148485235798e-07}
)(
	input wire clk,
	input wire rst_n,
	input wire en,
	input wire signed [DW - 1 : 0] in,
	output logic signed [DW - 1 : 0] out
);
	localparam N = TAPS - 1;
	logic signed [DW - 1 : 0] coef[TAPS];
	logic signed [DW - 1 : 0] prod[TAPS];
	logic signed [DW - 1 : 0] delay[TAPS];
	generate
		for (genvar t = 0; t < TAPS; t++) begin
			assign coef[t] = COEF[t] * 2.0**(DW - 1.0);
			assign prod[t] = ((2 * DW)'(in) * (2 * DW)'(coef[t])) >>> (DW - 1);
		end
	endgenerate

	generate
		for (genvar t = 0; t < TAPS; t++) begin
			always_ff @(posedge clk)begin
				if (rst_n == 0) begin
					delay[t] <= '0;
				end
				else if(en)begin
					if (t == 0) begin
						delay[0] <= prod[N - t];
					end
					else begin
						delay[t] <= prod[N - t] + delay[t - 1];
					end
				end
			end
		end
	endgenerate
	assign out = delay[N];
endmodule





module FM_MIX_FIR #(
	parameter DW = 16,
	parameter TAPS = 101,
	parameter real COEF[TAPS] = '{
		 6.991759353001e-06,   9.788824386e-06,1.360964855492e-05,1.879065574234e-05,
  2.576449231563e-05,3.508257821861e-05,4.744134445533e-05,6.371226765671e-05,
  8.497564393702e-05,0.0001125578194499,0.0001480713099449,0.0001934568955064,
  0.0002510263732975,0.0003235041999479,0.0004140657722865,0.0005263696039069,
  0.0006645801867326,0.0008333779198623, 0.001037952187358, 0.001283973521454,
   0.001577540848526, 0.001925100130385, 0.002333331324445, 0.002809001522556,
   0.003358783402176, 0.003989039725287, 0.004705576514193, 0.005513369654371,
   0.006416271928562,  0.00741670975138, 0.008515381004366, 0.009710967206263,
    0.01099987462498,  0.01237601968476,  0.01383067400308,  0.01535238349896,
    0.01692697418668,  0.01853765450388,  0.02016522038291,  0.02178836489091,
    0.02338408933424,  0.02492820750256,  0.02639592951597,  0.02776250686042,
    0.02900391597909,  0.03009755453758,  0.03102292245652,  0.03176225919976,
    0.03230110972201,  0.03262879392506,  0.03273875834753,  0.03262879392506,
    0.03230110972201,  0.03176225919976,  0.03102292245652,  0.03009755453758,
    0.02900391597909,  0.02776250686042,  0.02639592951597,  0.02492820750256,
    0.02338408933424,  0.02178836489091,  0.02016522038291,  0.01853765450388,
    0.01692697418668,  0.01535238349896,  0.01383067400308,  0.01237601968476,
    0.01099987462498, 0.009710967206263, 0.008515381004366,  0.00741670975138,
   0.006416271928562, 0.005513369654371, 0.004705576514193, 0.003989039725287,
   0.003358783402176, 0.002809001522556, 0.002333331324445, 0.001925100130385,
   0.001577540848526, 0.001283973521454, 0.001037952187358,0.0008333779198623,
  0.0006645801867326,0.0005263696039069,0.0004140657722865,0.0003235041999479,
  0.0002510263732975,0.0001934568955064,0.0001480713099449,0.0001125578194499,
  8.497564393702e-05,6.371226765671e-05,4.744134445533e-05,3.508257821861e-05,
  2.576449231563e-05,1.879065574234e-05,1.360964855492e-05,   9.788824386e-06,
  6.991759353001e-06
}
)(
	input wire clk,
	input wire rst_n,
	input wire en,
	input wire signed [DW - 1 : 0] in,
	output logic signed [DW - 1 : 0] out
);
	localparam N = TAPS - 1;
	logic signed [DW - 1 : 0] coef[TAPS];
	logic signed [DW - 1 : 0] prod[TAPS];
	logic signed [DW - 1 : 0] delay[TAPS];
	generate
		for (genvar t = 0; t < TAPS; t++) begin
			assign coef[t] = COEF[t] * 2.0**(DW - 1.0);
			assign prod[t] = ((2 * DW)'(in) * (2 * DW)'(coef[t])) >>> (DW - 1);
		end
	endgenerate

	generate
		for (genvar t = 0; t < TAPS; t++) begin
			always_ff @(posedge clk)begin
				if (rst_n == 0) begin
					delay[t] <= '0;
				end
				else if(en)begin
					if (t == 0) begin
						delay[0] <= prod[N - t];
					end
					else begin
						delay[t] <= prod[N - t] + delay[t - 1];
					end
				end
			end
		end
	endgenerate
	assign out = delay[N];
endmodule







module FM_FIR #(
	parameter DW = 16,
	parameter TAPS = 221,
	parameter real COEF[TAPS] = '{
	0.001024572286212,0.0002228056542144, 0.000246642229204,0.0002719321176372,
  0.0002986758029332,0.0003269943902927,0.0003568295382041,0.0003883581340547,
  0.0004215474845133,0.0004564765643217,0.0004931491548045,0.0005316138454434,
   0.000571878103808,0.0006139472605884,0.0006578022107427,0.0007034859798799,
  0.0007510131160962,0.0008004424540402,0.0008517879483379,0.0009051159920787,
  0.0009604669760626,  0.00101787966541, 0.001077329897763, 0.001138769401166,
   0.001202167856014, 0.001267491697953, 0.001334798464248, 0.001404085807661,
   0.001475483119582, 0.001548946924116, 0.001624466611719, 0.001701805272526,
   0.001780878570676, 0.001861724459968, 0.001944797937766, 0.002030035144999,
   0.002117260942774, 0.002204741792589, 0.002295779665461, 0.002387790586909,
   0.002481348616797, 0.002576923580074, 0.002673748810409,  0.00277241728109,
   0.002872327822681, 0.002973834174765, 0.003076531588926, 0.003180662278168,
    0.00328587778578, 0.003392347277952, 0.003499777598109,  0.00360834555023,
   0.003717742067394, 0.003828077585211, 0.003939034377469, 0.004050741174177,
   0.004162933060353, 0.004275727157573,  0.00438884356117,  0.00450236441237,
   0.004616003631586, 0.004729806679197,  0.00484350406042, 0.004957161797237,
   0.005070587938649, 0.005183826185056, 0.005296578331592, 0.005408830240458,
   0.005520294410982, 0.005631188154061, 0.005741207871172, 0.005850340640179,
   0.005958239038071, 0.006064917460095, 0.006170670012051, 0.006274711102316,
   0.006377283745495, 0.006478427327973, 0.006577619481906, 0.006675241277701,
   0.006770711294371, 0.006864351492206, 0.006955752602141, 0.007045068240185,
   0.007131925572966, 0.007216463048039, 0.007298398709762, 0.007377875608878,
   0.007454569149369, 0.007528596585425, 0.007599651721353, 0.007667882522383,
   0.007732996084007, 0.007795130846402, 0.007854007691312, 0.007909778737909,
   0.007962161893267, 0.008011286950659, 0.008056892170027,  0.00809914408521,
   0.008137820268519, 0.008173047144137, 0.008204552329719, 0.008232518655553,
   0.008256710527587, 0.008277423692674, 0.008294232791261, 0.008307448829949,
   0.008316756541556, 0.008322411636966, 0.008324385846598, 0.008322411636966,
   0.008316756541556, 0.008307448829949, 0.008294232791261, 0.008277423692674,
   0.008256710527587, 0.008232518655553, 0.008204552329719, 0.008173047144137,
   0.008137820268519,  0.00809914408521, 0.008056892170027, 0.008011286950659,
   0.007962161893267, 0.007909778737909, 0.007854007691312, 0.007795130846402,
   0.007732996084007, 0.007667882522383, 0.007599651721353, 0.007528596585425,
   0.007454569149369, 0.007377875608878, 0.007298398709762, 0.007216463048039,
   0.007131925572966, 0.007045068240185, 0.006955752602141, 0.006864351492206,
   0.006770711294371, 0.006675241277701, 0.006577619481906, 0.006478427327973,
   0.006377283745495, 0.006274711102316, 0.006170670012051, 0.006064917460095,
   0.005958239038071, 0.005850340640179, 0.005741207871172, 0.005631188154061,
   0.005520294410982, 0.005408830240458, 0.005296578331592, 0.005183826185056,
   0.005070587938649, 0.004957161797237,  0.00484350406042, 0.004729806679197,
   0.004616003631586,  0.00450236441237,  0.00438884356117, 0.004275727157573,
   0.004162933060353, 0.004050741174177, 0.003939034377469, 0.003828077585211,
   0.003717742067394,  0.00360834555023, 0.003499777598109, 0.003392347277952,
    0.00328587778578, 0.003180662278168, 0.003076531588926, 0.002973834174765,
   0.002872327822681,  0.00277241728109, 0.002673748810409, 0.002576923580074,
   0.002481348616797, 0.002387790586909, 0.002295779665461, 0.002204741792589,
   0.002117260942774, 0.002030035144999, 0.001944797937766, 0.001861724459968,
   0.001780878570676, 0.001701805272526, 0.001624466611719, 0.001548946924116,
   0.001475483119582, 0.001404085807661, 0.001334798464248, 0.001267491697953,
   0.001202167856014, 0.001138769401166, 0.001077329897763,  0.00101787966541,
  0.0009604669760626,0.0009051159920787,0.0008517879483379,0.0008004424540402,
  0.0007510131160962,0.0007034859798799,0.0006578022107427,0.0006139472605884,
   0.000571878103808,0.0005316138454434,0.0004931491548045,0.0004564765643217,
  0.0004215474845133,0.0003883581340547,0.0003568295382041,0.0003269943902927,
  0.0002986758029332,0.0002719321176372, 0.000246642229204,0.0002228056542144,
   0.001024572286212}
)(
	input wire clk,
	input wire rst_n,
	input wire en,
	input wire signed [DW - 1 : 0] in,
	output logic signed [DW - 1 : 0] out
);
	localparam N = TAPS - 1;
	logic signed [DW - 1 : 0] coef[TAPS];
	logic signed [DW - 1 : 0] prod[TAPS];
	logic signed [DW - 1 : 0] delay[TAPS];
	generate
		for (genvar t = 0; t < TAPS; t++) begin
			assign coef[t] = COEF[t] * 2.0**(DW - 1.0);
			assign prod[t] = ((2 * DW)'(in) * (2 * DW)'(coef[t])) >>> (DW - 1);
		end
	endgenerate

	generate
		for (genvar t = 0; t < TAPS; t++) begin
			always_ff @(posedge clk)begin
				if (rst_n == 0) begin
					delay[t] <= '0;
				end
				else if(en)begin
					if (t == 0) begin
						delay[0] <= prod[N - t];
					end
					else begin
						delay[t] <= prod[N - t] + delay[t - 1];
					end
				end
			end
		end
	endgenerate
	assign out = delay[N];
endmodule